     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13 00000000 05                          a db 5
    14 00000001 0A00                        b dw 10
    15 00000003 0F000000                    c dd 15
    16 00000007 6400000000000000            d dq 100
    17                                      
    18                                  
    19                                  ; a - byte, b - word, c - double word, d - qword - Unsigned representation
    20                                  
    21                                  segment code use32 class=code
    22                                      start:
    23                                          ; ((a + b) + (a + c) + (b + c)) - d
    24 00000000 B800000000                      mov eax, 0
    25 00000005 A0[00000000]                    mov al, [a]
    26 0000000A 668B1D[01000000]                mov bx, [b]
    27 00000011 6601D8                          add ax, bx ;a+b
    28 00000014 BB00000000                      mov ebx, 0
    29 00000019 668B1D[01000000]                mov bx, [b]
    30 00000020 8B0D[03000000]                  mov ecx, [c]
    31 00000026 01CB                            add ebx, ecx ;a+c
    32 00000028 01D8                            add eax, ebx ;(a + b) + (a + c) - eax
    33 0000002A BB00000000                      mov ebx, 0
    34 0000002F 668B1D[01000000]                mov bx, [b]
    35 00000036 031D[03000000]                  add ebx, [c]
    36 0000003C 01D8                            add eax, ebx
    37 0000003E 8B1D[07000000]                  mov ebx, [d]
    38 00000044 8B0D[0B000000]                  mov ecx, [d+4]
    39 0000004A 29D8                            sub eax, ebx
    40                                          
    41                                          
    42                                          ; exit(0)
    43 0000004C 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    44 0000004E FF15[00000000]                  call    [exit]       ; call exit to terminate the program

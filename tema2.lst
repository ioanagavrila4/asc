     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13 00000000 05                          a db 5
    14 00000001 0A00                        b dw 10
    15 00000003 0F000000                    c dd 15
    16 00000007 6400000000000000            d dq 100
    17                                      
    18                                  
    19                                  ; a - byte, b - word, c - double word, d - qword - Unsigned representation
    20                                  
    21                                  segment code use32 class=code
    22                                      start:
    23                                          ; (d+d-b)+(c-a)+d
    24 00000000 A1[07000000]                    mov eax, [d]
    25 00000005 8B15[0B000000]                  mov edx, [d+4]
    26 0000000B 8B1D[07000000]                  mov ebx, [d]
    27 00000011 8B0D[0B000000]                  mov ecx, [d+4]
    28 00000017 01D8                            add eax, ebx
    29 00000019 11CA                            adc edx, ecx
    30 0000001B B900000000                      mov ecx, 0
    31 00000020 668B0D[01000000]                mov cx, [b]
    32 00000027 29C8                            sub eax, ecx
    33 00000029 83DA00                          sbb edx, 0
    34 0000002C B900000000                      mov ecx, 0
    35 00000031 8B0D[03000000]                  mov ecx, [c]
    36 00000037 BB00000000                      mov ebx, 0
    37 0000003C 8A1D[00000000]                  mov bl, [a]
    38 00000042 29D9                            sub ecx, ebx
    39 00000044 01C8                            add eax, ecx
    40 00000046 83D200                          adc edx, 0
    41 00000049 8B1D[07000000]                  mov ebx, [d]
    42 0000004F 8B0D[0B000000]                  mov ecx, [d+4]
    43 00000055 01D8                            add eax, ebx
    44 00000057 11CA                            adc edx, ecx
    45                                          ; exit(0)
    46 00000059 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    47 0000005B FF15[00000000]                  call    [exit]       ; call exit to terminate the program
